<?xml version="1.0" encoding="UTF-8"?>
<operatorModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <cppOperatorModel>
    <context>
    <description></description>

    <metrics>
    <metric>
    <name>nPacketsReceivedCurrent</name>
    <description>Number packets received in current session.</description>
    <kind>Counter</kind>
    </metric>
    <metric>
    <name>nPacketsDroppedCurrent</name>
    <description>Number of packets dropped in current session because there was no room in the operating system's buffer when they arrived, because packets weren't being read fast enough</description>
    <kind>Counter</kind>
    </metric>
    <metric>
    <name>nPacketsDroppedByInterfaceCurrent</name>
    <description>Number of packets dropped in current session by the network interface or its driver.</description>
    <kind>Counter</kind>
    </metric>
    <metric>
    <name>nPacketsProcessedCurrent</name>
    <description>Number of packets procesed by this operator.</description>
    <kind>Counter</kind>
    </metric>
    <metric>
    <name>nOctetsProcessedCurrent</name>
    <description>Number of packet bytesd processed by this operator.</description>
    <kind>Counter</kind>
    </metric>
    </metrics>

      <customOutputFunctions>
      <customOutputFunction>
      <name>packet output functions</name>
      <function>
      <description></description>
      <prototype>uint64 packetsReceived()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint64 packetsDropped()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint64 packetsDroppedByInterface()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint64 packetsProcessed()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint64 octetsProcessed()</prototype>
      </function>

      <function>
      <description></description>
      <prototype>uint32 CAPTURE_SECONDS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 CAPTURE_MICROSECONDS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 PACKET_LENGTH()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>blob PACKET_DATA()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 PAYLOAD_LENGTH()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>blob PAYLOAD_DATA()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>list&lt;uint8>[6] ETHER_SRC_ADDRESS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>list&lt;uint8>[6] ETHER_DST_ADDRESS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 ETHER_PROTOCOL()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint8 IP_VERSION()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint8 IP_PROTOCOL()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 IPV4_SRC_ADDRESS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 IPV4_DST_ADDRESS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>list&lt;uint8>[16] IPV6_SRC_ADDRESS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>list&lt;uint8>[16] IPV6_DST_ADDRESS()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 IP_SRC_PORT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 IP_DST_PORT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 UDP_SRC_PORT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 UDP_DST_PORT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 TCP_SRC_PORT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 TCP_DST_PORT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 TCP_SEQUENCE()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint32 TCP_ACKNOWLEDGEMENT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>boolean TCP_FLAGS_URGENT()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>boolean TCP_FLAGS_ACK()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>boolean TCP_FLAGS_PUSH()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>boolean TCP_FLAGS_RESET()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>boolean TCP_FLAGS_SYN()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>boolean TCP_FLAGS_FIN()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>uint16 TCP_WINDOW()</prototype>
      </function>
      <function>
      <description></description>
      <prototype>&lt;any T> T copy()</prototype>
      </function>
      </customOutputFunction>
      </customOutputFunctions>

      <libraryDependencies>

	<library>
	<cmn:description>
	</cmn:description>
	<cmn:managedLibrary>
	<cmn:libPath>../../impl/lib/parse</cmn:libPath>
	<cmn:includePath>../../impl/include/parse</cmn:includePath>
	</cmn:managedLibrary>
	</library>

	<library>
	<cmn:description>
	</cmn:description>
	<cmn:managedLibrary>
	<cmn:libPath>../../impl/lib/source</cmn:libPath>
	<cmn:includePath>../../impl/include/source</cmn:includePath>
	</cmn:managedLibrary>
	</library>

	<library>
	<cmn:description>streams_source interface to dkdp</cmn:description>
	<cmn:managedLibrary>
	<cmn:lib>streams_source</cmn:lib>
	<cmn:libPath>../../impl/src/source/dpdk/build/lib</cmn:libPath>
	<cmn:includePath>../../impl/src/source/dpdk</cmn:includePath>
	</cmn:managedLibrary>
	</library>

	</libraryDependencies>
	<providesSingleThreadedContext>Always</providesSingleThreadedContext>
      <allowCustomLogic>true</allowCustomLogic>
    </context>
    <parameters>
    <allowAny>false</allowAny>
    <parameter>
      <name>coreMask</name>
      <description> </description>
      <optional>false</optional>
      <rewriteAllowed>true</rewriteAllowed>
      <expressionMode>Expression</expressionMode>
      <type>rstring</type>
      <cardinality>-1</cardinality>
    </parameter>
    <parameter>
    <name>promiscuous</name>
    <description> </description>
    <optional>true</optional>
    <rewriteAllowed>true</rewriteAllowed>
    <expressionMode>Expression</expressionMode>
    <type>boolean</type>
    <cardinality>-1</cardinality>
    </parameter>
    <parameter>
      <name>lcore</name>
      <description>
      </description>
      <optional>false</optional>
      <rewriteAllowed>true</rewriteAllowed>
      <expressionMode>Expression</expressionMode>
      <type>int32</type>
      <cardinality>-1</cardinality>
    </parameter>
    <parameter>
      <name>nicPort</name>
      <description>
      </description>
      <optional>false</optional>
      <rewriteAllowed>true</rewriteAllowed>
      <expressionMode>Expression</expressionMode>
      <type>int32</type>
      <cardinality>-1</cardinality>
    </parameter>
    <parameter>
      <name>nicQueue</name>
      <description>
      </description>
      <optional>false</optional>
      <rewriteAllowed>true</rewriteAllowed>
      <expressionMode>Expression</expressionMode>
      <type>int32</type>
      <cardinality>-1</cardinality>
    </parameter>
    <parameter>
      <name>metricsInterval</name>
      <description></description>
      <optional>true</optional>
      <rewriteAllowed>true</rewriteAllowed>
      <expressionMode>Expression</expressionMode>
      <type>float64</type>
      <cardinality>1</cardinality>
    </parameter>

    </parameters>
    <inputPorts>
    </inputPorts>
    <outputPorts>
      <outputPortOpenSet>
        <description></description>
        <expressionMode>Expression</expressionMode>
        <autoAssignment>false</autoAssignment>
        <completeAssignment>false</completeAssignment>
        <rewriteAllowed>true</rewriteAllowed>
        <outputFunctions>
          <default>copy</default>
          <type>packet output functions</type>
        </outputFunctions>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
        <windowPunctuationInputPort>-1</windowPunctuationInputPort>
        <tupleMutationAllowed>false</tupleMutationAllowed>
	<allowNestedCustomOutputFunctions>true</allowNestedCustomOutputFunctions>
      </outputPortOpenSet>
    </outputPorts>
  </cppOperatorModel>
</operatorModel>
