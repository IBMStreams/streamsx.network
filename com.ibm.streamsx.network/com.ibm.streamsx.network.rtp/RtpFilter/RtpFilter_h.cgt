/*******************************************************************************
 * Copyright (C) 2016, International Business Machines Corporation
 * All Rights Reserved
 *******************************************************************************/

#define BITFIELD(byte, mask, shift) \
   (((byte) & (mask)) >> (shift))

/* Protocol version */
#define RTP_VERSION(byte) BITFIELD(byte, 0xC0, 6)

/* Payload type */
#define RTP_PAYLOAD_TYPE(byte) BITFIELD(byte, 0xFF, 0)

#define RTP_MIN_SIZE 12
#define RTP_CURRENT_VERSION 2
#define G729 18
#define G711U 0
#define PAYLOAD_LENGTH 172 // RTP Header + Audio data


<%SPL::CodeGen::headerPrologue($model);%>

class MY_OPERATOR : public MY_BASE_OPERATOR 
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Notify port readiness
  void allPortsReady(); 

  // Notify pending shutdown
  void prepareToShutdown(); 

  // Processing for source and threaded operators   
  void process(uint32_t idx);
    
  // Tuple processing for mutating ports 
  void process(Tuple & tuple, uint32_t port);
    
  // Tuple processing for non-mutating ports
  void process(Tuple const & tuple, uint32_t port);

  // Punctuation processing
  void process(Punctuation const & punct, uint32_t port);
private:
  // Members 
   int xxx;
}; 

<%SPL::CodeGen::headerEpilogue($model);%>

